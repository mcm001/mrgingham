name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install deps
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt install libopencv-features2d-dev libopencv-highgui-dev libopencv-core-dev libvisp-imgproc-dev libboost-dev -y

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v3
      name: Upload image
      with:
        name: libmrgingham
        path: ${{github.workspace}}/build/*.so

  build-raspi:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
    - uses: pguyot/arm-runner-action@v2
      with:
        base_image: raspios_lite_arm64:latest
        cpu: cortex-a7
        image_additional_mb: 2500
        bind_mount_repository: true
        commands: |
          sudo apt update
          sudo apt -y upgrade
          sudo apt install libopencv-features2d-dev libopencv-highgui-dev libopencv-core-dev libvisp-imgproc-dev libboost-dev cmake build-essential default-jdk -y
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v3
      name: Upload image
      with:
        name: libmrgingham
        path: ${{github.workspace}}/build/*.so
